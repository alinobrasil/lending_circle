'use client';
import { ConnectButton } from '@rainbow-me/rainbowkit';
import type { NextPage } from 'next';
import Head from 'next/head';
import { useState, useEffect } from 'react';

import { useAccount, useContractRead } from 'wagmi';
import LendingCircleArtifact from './helpers/LendingCircle.json'
import NavBar from './components/NavBar';
import { Config } from './helpers/config';
import { Address } from 'wagmi'

import dynamic from 'next/dynamic';
import BasicTable from './components/BasicTable';
import { UseContractReadResult } from './helpers/types'

import { ethers } from 'ethers';
import { getCircleCount } from './components/chainData';

enum PeriodType {
  Every5Minutes,
  Hourly,
  Daily,
  Weekly
}

type CircleInfo = {
  id: number;
  name: string;
  contributionAmount: string;
  periodType: string;
  periodDuration: PeriodType,
  numberOfPeriods: number,
  adminFeePercentage: number,
  currentPeriodNumber: number,
  nextDueTime: number,
  contributorsThisPeriod: number
}



const Home: NextPage = () => {
  // view all lending circles, split into active, pending & completed circles
  // admin gets option to create new circle
  // active participants get to see circles they're currently involved in

  const [circles, setCircles] = useState<CircleInfo[]>([])
  const [cirleCount, setCircleCount] = useState(0)

  const { address } = useAccount();

  // function getCircleCount() {
  //   const { data, isError, isLoading } = useContractRead({
  //     address: Config.scrollSepolia.contractAddress as Address,
  //     abi: LendingCircleArtifact.abi,
  //     functionName: 'circleCount',
  //   }) as UseContractReadResult
  //   console.log("circle count: ", data.toString())
  // }


  //display welcome message if user is not connected
  const welcomePage = () => {

    if (!address) {
      return (
        <>
          <h1 className="text-4xl font-bold text-gray-800 mb-4">
            Welcome to Unity Lending Circles
          </h1>

          <p>Get started by connecting your wallet </p>

          <ConnectButton />
        </>
      )
    }
  }

  const viewCircles = () => {
    //display if user is connected

    // for (let i = 0; i < cirleCount; i++) {
    //   const { data: circleData, isError, isLoading } = useContractRead({
    //     address: Config.scrollSepolia.contractAddress as Address,
    //     abi: LendingCircleArtifact.abi,
    //     functionName: 'getCircleDetails',
    //     args: [i.toString()]
    //   }) as UseContractReadResult

    //   console.log(circleData)
    //   setCircles(circleData);


    // }


    if (address) {
      return (
        <></>
      )
    }
  }


  // useEffect(() => {
  //   setCircleCount(getCircleCount())

  // }, [])









  return (
    <div >
      <Head>
        <title>Lending Circle - Ali Kim</title>
        <meta
          content="Generated by @rainbow-me/create-rainbowkit"
          name="Eth Global Online 2023"
        />
        <link href="/favicon.ico" rel="icon" />
      </Head>

      <NavBar />

      <div className="body-area">
        {welcomePage()}

        {address ? viewCircles() : <></>}

        <BasicTable />

      </div>

      <div className='text-center fixed bottom-0 w-full'>
        <a href="https://twitter.com/alik_im" rel="noopener noreferrer" target="_blank">
          Made with ❤️ by Ali Kim
        </a>
      </div>
    </div>
  );
};

export default dynamic(() => Promise.resolve(Home), { ssr: false })

